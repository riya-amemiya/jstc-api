"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.router=void 0;var _express=_interopRequireDefault(require("express")),_helmet=_interopRequireDefault(require("helmet")),_cors=_interopRequireDefault(require("cors")),_core=require("@jstc/core");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return _getRequireWildcardCache=function(){return e},e}function _interopRequireWildcard(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=_getRequireWildcardCache();if(r&&r.has(e))return r.get(e);var t={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var u=o?Object.getOwnPropertyDescriptor(e,n):null;u&&(u.get||u.set)?Object.defineProperty(t,n,u):t[n]=e[n]}return t.default=e,r&&r.set(e,t),t}function asyncGeneratorStep(e,r,t,o,n,u,i){try{var a=e[u](i),s=a.value}catch(e){return void t(e)}a.done?r(s):Promise.resolve(s).then(o,n)}function _asyncToGenerator(){return function(){return new Promise((function(e,r){function t(n){asyncGeneratorStep(h,e,r,t,o,"next",n)}function o(n){asyncGeneratorStep(h,e,r,t,o,"throw",n)}t(void 0)}))}}const app=(0,_express.default)();app.use((0,_helmet.default)()),app.use((0,_cors.default)());const router=_express.default.Router();exports.router=router,router.get("/python",(function(e,r){_asyncToGenerator((function*(){if("string"==typeof e.query.code){const t=(yield Promise.resolve().then((function(){return _interopRequireWildcard(require("acorn"))}))).parse(e.query.code,{ecmaVersion:"latest",allowAwaitOutsideFunction:!0,allowImportExportEverywhere:!0,allowReserved:!0});r.status(200).send({code:new _core.python({codes:t,mode:"python",option:{optimisation:!1}}).parse.code})}}))()})),router.get("/ruby",(function(e,r){_asyncToGenerator((function*(){if("string"==typeof e.query.code){const t=(yield Promise.resolve().then((function(){return _interopRequireWildcard(require("acorn"))}))).parse(e.query.code,{ecmaVersion:"latest",allowAwaitOutsideFunction:!0,allowImportExportEverywhere:!0,allowReserved:!0});r.status(200).send({code:new _core.ruby({codes:t,mode:"ruby",option:{optimisation:!1}}).parse.code})}}))()})),app.use((function(e,r){r.status(404),r.render("error",{param:{status:404,message:"not found"}})}));